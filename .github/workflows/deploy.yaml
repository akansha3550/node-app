name: Deploy to EC2

on:
  push:
    branches:
      - main  # Adjust to your branch (main, master, etc.)
  pull_request:
    branches:
      - main  # Adjust to your branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t akanshachauhary/node-app .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Using the official Docker login action
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Debug Secrets
      run: echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"

    - name: Print Environment Variables
      run: env | grep DOCKER

    - name: Push Docker image to Docker Hub
      run: |
        docker push akanshachauhary/node-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure that deploy runs after the build step completes

    steps:
    - name: SSH to EC2 and deploy the app
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/node-app
          docker pull akanshachauhary/node-app:latest
          docker stop my-node-app || true
          docker rm my-node-app || true
          docker run -d -p 80:3000 --name node-app akanshachauhary/node-app:latest || exit 1
          docker system prune -af || true  # Clean up unused Docker images and containers
